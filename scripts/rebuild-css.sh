#!/bin/bash

exit 0

# A script that listens for changes to a .css file, then writes its contents
# to a .ts file along with a header and footer. Basically, I got tired of 
# trying to use CSS in Typescript projects and not getting any intellisense.
# Run this, then edit the .css, and the .ts file updates automatically.

# prog_name="rebuild-css.sh"
# input_file="styles.css"
# output_file="styles.ts"
class_selector="pptrPointerCss"

if [ $# -ne 2 ]; then
    echo "Usage: $0 <input_file> <output_file>"
    exit 1
fi

parent_command=$(ps -o comm= $PPID)
prog_name="$0" # TODO: compute absolute paths of input_file, output_file, and prog_name
input_file="$1"
output_file="$2"

if [ "$parent_command" != "xargs" ]; then
    # TODO: use flags instead of parent_command check
    # If parent_command is `xargs` then run fswatch
    fswatch "$input_file" | xargs -n1 -I{} "$prog_name" "{}" "$output_file"
    exit 0
fi

# Check if input file exists
if [ ! -f "$input_file" ]; then
    echo "Error: $input_file does not exist."
    exit 1
fi

# Read contents of input file into a variable
input_contents=$(<"$input_file")

# Construct the full content with header, carriage returns, and footer
warning="/* This file is auto-generated by script rebuild-css.sh. Do not edit. */"
full_content="${warning}\nexport const ${class_selector}: string = \`\n$input_contents\n\`;"

# Write the full content to the output file
echo -e "$full_content" > "$output_file"
echo "===== Wrote to $output_file ====="
 
